## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4    
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			  0.10
##===================================================================

# printer.cfg

[include mainsail.cfg]

[mcu]
##	MCU for X/Y/E steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[E in E0] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0E60000902094AAF2A845E5DC22000F5-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_20F0FF1748104AAFD7CB675DC02000F5-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 350  
max_accel: 3000    			#Max 4000
max_z_velocity: 50			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 10.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: P1.29
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 336
position_max: 336

##--------------------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: P1.28
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 100  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: z:P1.27
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.100
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 230

##	Uncomment below for 300mm build
#position_max: 280

##	Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: P2.7
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 39.141
#pid_ki = 3.303
#pid_kd = 115.955
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.0417
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on MCU X/Y
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: P1.4
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Filament Sensor
#####################################################################

[filament_switch_sensor filament_sensor]
pause_on_runout: True
runout_gcode:
    PAUSE
    M117 Out of Filament
insert_gcode:
    M117 Resuming
    RESUME
event_delay: 3.0
pause_delay: 0.5
switch_pin: P1.26

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: NTC 100K beta 3950
sensor_pin: z:P0.25
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp = 39.921
#pid_ki = 1.157
#pid_kd = 344.326

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, change pin to !^z:P0.10
pin: ^z:P0.10
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
# 	Chamber Thermistor
#####################################################################

[temperature_sensor Chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.23

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

[heater_fan exhaust_fan]
##	Exhaust fan - Z board, HE0 Connector
pin: z:P2.7
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: .25

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
pin: z:P2.5
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:224.8,350
speed:100
z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
	
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
##	Probe points
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
# 	Displays
#####################################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

## 	Uncomment the display that you have. Display connects to Z MCU
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#menu_timeout: 40
#encoder_pins: ^z:P3.26, ^z:P3.25 
#click_pin: ^!z:P0.28

#[output_pin beeper]
#pin: z:P1.30

#--------------------------------------------------------------------

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
contrast: 63

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: z:P1.21
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
				  
	   
					 
    G28
    BED_MESH_CLEAR
	QUAD_GANTRY_LEVEL
    G28 Z
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    #G0 X173 Y175 Z5 F20000
    #--------------------------------------------------------------------

[gcode_macro BEEP]
gcode:
	# Parameters
	{% set i = params.I|default(1)|int %}
	{% set beepms = params.BEEPMS|default(1)|int %}
	{% set waitms = params.WAITPMS|default(1)|int %}
	
    {% for beep in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8
        G4 P{beepms}
        SET_PIN PIN=beeper VALUE=0
		G4 P{waitms}
    {% endfor %}
   
[gcode_macro PRINT_START]
description: prepare printer for a print
gcode:
	# Eval these early, so that the missing required nozzle and bed
	# temps trigger sadness before doing anything.
	{% if not params.T_NOZZLE %}
	{ action_raise_error("nozzle temperature not specified") }
	{% endif %}
	{% if not params.T_PREHEAT %}
	{ action_raise_error("nozzle preheat temperature not specified") }
	{% endif %}
	{% if not params.T_BED %}
	{ action_raise_error("bed temperature not specified") }
	{% endif %}
	{% set nozzle_temp = params.T_NOZZLE|int %}
	{% set preheat_temp = params.T_PREHEAT|int %}
	{% set bed_temp = params.T_BED|int %}
	RESETSPEEDS																							; reset speed, accel etc to configured values
	RESETRGB																							; reset LCD RGB
	# Reset a bunch of gcode state: no bed mesh, no live Z, absolute
	# coords, extruder relative coords.
	G90
	M83
	#SET_GCODE_OFFSET Z=-0.15

	# Get the kinematics fully calibrated, and everything preheated.
	PRINT_START_CALIBRATE T_BED={bed_temp} T_PREHEAT={preheat_temp}
	# Move to priming location, and heat to full printing temp.
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1													; enable filament sensor
	PRIME_NOZZLE T_NOZZLE={nozzle_temp}

######################### PAUSE/RESUME/CANCEL #########################

# Fluidd SD printing
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	SDCARD_RESET_FILE
	PRINT_END
	BASE_CANCEL_PRINT

# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
	# Parameters
	{% set z = params.Z|default(10)|int %}														; z hop amount

	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}									    ; set z hop variable for reference in resume macro
	
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE																					; pause print
	G91																							; relative positioning
	G1 Z{z} F900																				; raise Z up by z hop amount
	G90																							; absolute positioning
	G1 XG0 X{printer.toolhead.axis_maximum.x/2} YG0 Y{printer.toolhead.axis_minimum.y+10} F19500   ; park toolhead at front center
	RESTORE_GCODE_STATE NAME=PAUSE
	SET_IDLE_TIMEOUT TIMEOUT=43200															    ; set timeout to 12 hours

# Return Z hop back down 10mm, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
gcode:
	# Parameters
	{% set e = params.E|default(2.5)|int %}																				; nozzle prime amount
	
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
	SAVE_GCODE_STATE NAME=RESUME
	RESETRGB
	G91																													; relative positioning
	{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}												
		G1 Z{zhop * -1} E{e} F900																						; prime nozzle by E, lower Z back down
	{% else %}						
		G1 Z{zhop * -1} F900																							; lower Z back down	without priming
	{% endif %}								
	RESTORE_GCODE_STATE NAME=RESUME						
	BASE_RESUME																											; resume print
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}											; set timeout back to configured value

# Filament runout / change alias	
[gcode_macro M600]
gcode:
	PAUSE
	LCDRGB R=1 G=0 B=0	# Turn LCD red
	
# Disable filament senor on startup, only enable during prints (in PRINT_START/PRINT_END)
[delayed_gcode DISABLEFILAMENTSENSOR]	
initial_duration: 1
gcode:
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
	
[gcode_macro PRINT_END]
																						   
gcode:
	RESETRGB
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0													; Disable filament sensor
	# Drain command buffer
	M400
	# Retract extruder to stop drool
	{% if printer.extruder.can_extrude %}
	G92 E0
	G1 E-10.0 F3600
	{% endif %}

	# Jog nozzle to the side to mitigate stringing.
	JOG
	# Turn off heaters.
	TURN_OFF_HEATERS
	# Park the toolhead.
	PARKREAR
	# Turn off the part cooling fan.
	M107
	# Remove bed mesh.
	BED_MESH_CLEAR
	# Turn off motors, stop holding position firmly.
	#M84
	BEEP I=3																							; beep 3 times

[gcode_macro JOG]
description: rapidly move the toolhead a small amount, to detach nozzle drool from the printed part
gcode:
	# Jogging only makes sense if kinematics are set up correctly.
	{% if printer.toolhead.homed_axes == "xyz" %}

	{% set jog_z = 1 %}
	{% if printer.toolhead.position.z >= printer.toolhead.axis_maximum.z %}
	{% set jog_z = 0 %}
	{% endif %}

	{% set jog_x = 10 %}
	{% if printer.toolhead.position.x >= (printer.toolhead.axis_maximum.x - jog_x) %}
	{% set jog_x = -10 %}
	{% endif %}

	{% set jog_y = 10 %}
	{% if printer.toolhead.position.y >= (printer.toolhead.axis_maximum.y - jog_y) %}
	{% set jog_y = -10 %}
	{% endif %}

	SAVE_GCODE_STATE NAME=JOG
	G91 # Relative movement
	G0 X{jog_x} Y{jog_y} Z{jog_z} F10000
	RESTORE_GCODE_STATE NAME=JOG

	{% endif %}

[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}  ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro BEEP]
gcode:
	# Parameters
	{% set i = params.I|default(1)|int %}
	{% set beepms = params.BEEPMS|default(1)|int %}
	{% set waitms = params.WAITPMS|default(1)|int %}
	
    {% for beep in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8
        G4 P{beepms}
        SET_PIN PIN=beeper VALUE=0
		G4 P{waitms}
    {% endfor %}

######################### PARKING #########################

#[gcode_macro PARKFRONT]
#gcode:
#	CG28                                  																						; home if not already homed
#	SAVE_GCODE_STATE NAME=PARKFRONT
#	G90                                   																						; absolute positioning
#	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z{printer.toolhead.axis_maximum.z/2} F19500		; park front center, center Z
#	RESTORE_GCODE_STATE NAME=PARKFRONT
#	
#[gcode_macro PARKFRONTLOW]
#gcode:
#	CG28                                  																						; home if not already homed
#	SAVE_GCODE_STATE NAME=PARKFRONT
#	G90                                   																						; absolute positioning
#	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} Z20 F19500										; park front center, 50mm up
#	RESTORE_GCODE_STATE NAME=PARKFRONT
	
[gcode_macro PARKREAR]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKREAR
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500		; park top rear left
	RESTORE_GCODE_STATE NAME=PARKREAR
	
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	; park center of build volume
	RESTORE_GCODE_STATE NAME=PARKCENTER
	
[gcode_macro PARKBED]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKBED
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500										; park 10mm above center of bed
	RESTORE_GCODE_STATE NAME=PARKBED
	
[gcode_macro PRIME_NOZZLE]
description: print a priming line along the front of the bed
gcode:
	{% if not params.T_NOZZLE %}
	{ action_raise_error("nozzle temperature not specified") }
	{% endif %}
	{% set nozzle_temp = params.T_NOZZLE|int %}

	SAVE_GCODE_STATE NAME=prime_nozzle
	M117 Priming nozzle
	G90
	{% if printer.toolhead.position.z < 5 %}
	G0 Z10 F10000
	{% endif %}
	M109 S{nozzle_temp}
    clean_nozzle
	#G0 Z15 F10000
    G0 X0 Y0 F10000
	G0 Z1 F1000
	G0 Z0.28 F1000
	G91
	G1 X60 E9 F1000
	G1 X100 E12.5 F1000
	G0 Z1 F1000
	JOG
	M117
	RESTORE_GCODE_STATE NAME=prime_nozzle

[gcode_macro PRINT_START_CALIBRATE]
description: preheat and do a full kinematic calibration
#default_parameter_T_PREHEAT: 170
gcode:
	{% if not params.T_PREHEAT %}
	{ action_raise_error("nozzle preheat temperature not specified") }
	{% endif %}
	{% if not params.T_BED %}
	{ action_raise_error("bed temperature not specified") }
	{% endif %}
	{% set preheat_temp = params.T_PREHEAT|int %}
	{% set bed_temp = params.T_BED|int %}

	SAVE_GCODE_STATE NAME=print_start_preheat
	# Absolute positioning, extruder relative, clear mesh.
	G90
	M83
	BED_MESH_CLEAR

	M117 Homing
	# Basic home to bring up kinematics.
	G28
	# Park in center of the bed and close to it, for the inductive
	# probe to soak up heat.
	G0 Z10 F10000
	G0 X173 Y175 F20000

	# Heat bed, preheat nozzle, wait for both.
	M117 Waiting for cool nozzle
	# Wait for the nozzle to be cold enough that its thermistor can be used to detect heat soak.
	#TEMPERATURE_WAIT SENSOR=extruder MINIMUM=0 MAXIMUM=43.8
	M117 Heating bed
	M190 S{bed_temp}
	M117 Heat soaking
	#TEMPERATURE_WAIT SENSOR=extruder MINIMUM=44
	M117 Preheating nozzle
	M109 S{preheat_temp}

	# Level gantry, re-home, compute bed mesh.
	M117 Leveling gantry
	QUAD_GANTRY_LEVEL
	clean_nozzle
	G28
	M117 Bed mesh
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=auto

	# Clear display.
	M117

	RESTORE_GCODE_STATE NAME=print_start_preheat

[gcode_macro SPEEDTEST]
gcode:
    #Parameters
    {% set i = params.I|default(1)|int %}
    
    SAVE_GCODE_STATE NAME=SPEEDTEST
    G28 X Y
    GET_POSITION
    G90                              ; absolute positioning
    {% for iteration in range(i|int) %}
        G1 X0 Y0     F27000
        G1 X340 Y340 F27000
        G1 X0 Y0     F27000
        G1 X340 Y340 F27000

        G1 X0 Y340 F36000

        G1 X340 Y0 F27000
        G1 X0 Y340 F27000
        G1 X340 Y0 F27000
        G1 X0 Y340 F27000

        G1 X0 Y0 F36000
        G1 X340 Y0 F36000
        G1 X340 Y340 F36000
        G1 X0 Y340 F36000
        G1 X0 Y0 F36000
    {% endfor %}
    G28 X Y
    GET_POSITION
    RESTORE_GCODE_STATE NAME=SPEEDTEST

[firmware_retraction]
retract_length: 6
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 25
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 1
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.
[gcode_macro _TIMELAPSE_NEW_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}
 ; leave this in a separate macro!

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
  G10
  SAVE_GCODE_STATE NAME=SNAPSHOT
  G1 X10.0 F10000
  G1 Y350.0 F10000
  G4 P500 ;dwell
  M400    ;clear buffer
  _TIMELAPSE_NEW_FRAME
  G4 P250 ;moar dwelling
  M400
  RESTORE_GCODE_STATE NAME=SNAPSHOT MOVE=1
  G11
  

[gcode_macro TIMELAPSE_RENDER]
gcode:
  {action_call_remote_method("timelapse_render")}

[gcode_macro TOGGLE_LEDLIGHTS]
gcode:
  SET_PIN PIN=LEDlights VALUE={(not printer['output_pin LEDlights'].value)|int}

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}
	
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
	{% if "xy" not in printer.toolhead.homed_axes %}
		G28 X Y
	{% endif %}

[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
		G28 Z
	{% endif %}
	
######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
	G1 E10 F600                           ; extrude a little to soften tip 
	G1 E-100 F1800                        ; retract filament completely
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
	G1 E85 F600
	RESTORE_GCODE_STATE NAME=LOADFILAMENT
   
[gcode_macro HOT_UNLOAD]
gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    UNLOAD_FILAMENT
	
[gcode_macro HOT_LOAD]
gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    LOAD_FILAMENT

######################### LCD RGB CONTROLS #########################

# Set LCD RGB at startup
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
	RESETRGB
	
# Default RGB
[gcode_macro RESETRGB]
gcode:
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
	SET_LED LED=fysetc_mini12864 RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
	SET_LED LED=fysetc_mini12864 RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

# Example LCDRGB R=1 G=0 B=0
[gcode_macro LCDRGB]
gcode:
	{% set R = params.R|default(1)|int %}
	{% set G = params.G|default(1)|int %}
	{% set B = params.B|default(1)|int %}

	SET_LED LED=fysetc_mini12864 RED={R} GREEN={G} BLUE={B} INDEX=1 TRANSMIT=0
	SET_LED LED=fysetc_mini12864 RED={R} GREEN={G} BLUE={B} INDEX=2 TRANSMIT=0
	SET_LED LED=fysetc_mini12864 RED={R} GREEN={G} BLUE={B} INDEX=3
	
[include /home/pi/klipper_config/nozzle_scrub.cfg]

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.798
#*# pid_ki = 1.133
#*# pid_kd = 367.182
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 38.717
#*# pid_ki = 3.187
#*# pid_kd = 117.604
#*#
#*# [stepper_z]
#*# position_endstop = -0.200
